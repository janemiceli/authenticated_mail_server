<?xml version="1.0"?>
<doc>
    <assembly>
        <name>lsMailServer</name>
    </assembly>
    <members>
        <member name="T:LumiSoft.MailServer.Monitoring.MonitoringServerSession">
            <summary>
            Monitoring server session.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.#ctor(System.String,LumiSoft.Net.SocketEx,LumiSoft.Net.BindInfo,LumiSoft.MailServer.Monitoring.MonitoringServer)">
            <summary>
            Default constructor.
            </summary>
            <param name="sessionID">Session ID.</param>
            <param name="socket">Server connected socket.</param>
            <param name="bindInfo">BindInfo what accepted socket.</param>
            <param name="server">Reference to server.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.StartSession">
            <summary>
            Starts session.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.EndSession">
            <summary>
            Ends session, closes socket.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.OnSessionTimeout">
            <summary>
            Is called by server when session has timed out.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.OnError(System.Exception)">
            <summary>
            Is called when error occures.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.BeginRecieveCmd">
            <summary>
            Starts recieveing command.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.EndRecieveCmd(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called if command is recieved.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.SwitchCommand(System.String)">
            <summary>
            Executes command.
            </summary>
            <param name="commandText">Original command text.</param>
            <returns>Returns true if must end session(command loop).</returns>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.QUIT">
            <summary>
            QUIT command.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.CompressDataSet(System.Data.DataSet)">
            <summary>
            Compresses specified dataset with GZIP.
            </summary>
            <param name="ds">DataSet to compress.</param>
            <returns>Returns gzipped dataset xml data.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.DataView_To_DataSet(System.Data.DataView)">
            <summary>
            Copies DataView.Table stucture and it's data to new data set.
            </summary>
            <param name="dv"></param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.Error">
            <summary>
            Error handling.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.Exception)">
            <summary>
            Writes error to error log file.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.String,System.Exception)">
            <summary>
            Writes error to error log file.
            </summary>
            <param name="virtualServer">Virtual server name.</param>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.Exception,System.Diagnostics.StackTrace)">
            <summary>
            Writes error to error log file.
            </summary>
            <param name="x"></param>
            <param name="stackTrace"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.String,System.Exception,System.Diagnostics.StackTrace)">
            <summary>
            Writes error to error log file.
            </summary>
            <param name="virtualServer">Virtual server name.</param>
            <param name="x"></param>
            <param name="stackTrace"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.String,System.String)">
            <summary>
            Writes error to error log file.
            </summary> 
            <param name="virtualServer">Virtual server name.</param>
            <param name="errorText">Error text to dump.</param>
        </member>
        <member name="P:LumiSoft.MailServer.Error.ErrorFilePath">
            <summary>
            Gets or sets error file path.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.RecycleBinManager">
            <summary>
            Recycle bin messages manager.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.#ctor(LumiSoft.MailServer.IMailServerApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="api">Virtual server api</param>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.DoCleanUp">
            <summary>
            Deletes recycle bin messages what 'delete after days' has exceeded.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinManager.LastCleanUpTime">
            <summary>
            Gets when last clean up was done.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.Logger">
            <summary>
            Provides logging related methods.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Logger.WriteLog(System.String,LumiSoft.Net.SocketLogger)">
            <summary>
            Writes socket log to the specified log file.
            </summary>
            <param name="file">Log file.</param>
            <param name="logger">Socket logger.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Logger.WriteLog(System.String,System.String)">
            <summary>
            Writes specified text to log file.
            </summary>
            <param name="fileName">Log file name.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="T:LumiSoft.MailServer.BadLoginManager">
            <summary>
            Bad login manager.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.Put(System.String,System.String)">
            <summary>
            Increases specified IP bad login count for specified user name.
            </summary>
            <param name="ip">IP address.</param>
            <param name="userName">User name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.IsExceeded(System.String,System.String)">
            <summary>
            Gets if maximum allowed bad logins for specified IP and user name has exceeded.
            </summary>
            <param name="ip">IP address.</param>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.MaximumBadLogins">
            <summary>
            Gets or sets how many bad logins may be from 1 IP for specified user in specified period.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.BadLoginManager.BadLoginEntry">
            <summary>
            This class holds bad login entry info.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="ip">IP address.</param>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.IncreaseBadLoginCount(System.String)">
            <summary>
            Increases specified user bad logins count.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.GetUserBadLoginCount(System.String)">
            <summary>
            Gets specified user name bad logins count.
            </summary>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.RemoveOlderThan(System.Int32)">
            <summary>
            Removes older than specified seconds entries from collection.
            </summary>
            <param name="seconds">Time in seconds.</param>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.IsEmpty">
            <summary>
            Gets if this entry doesn't contain no user entries.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.IP">
            <summary>
            Gets IP address what is related to this entry.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.CreationTime">
            <summary>
            Gets time when this entry was created.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry">
            <summary>
            This class holds user bad login info.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="userName">User name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.IncreaseBadLoginCount">
            <summary>
            Increases this entry user bad logins count.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.UserName">
            <summary>
            Gets thios entry related user name.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.CreationTime">
            <summary>
            Gets time when this entry was created.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.BadLoginCount">
            <summary>
            Gets how many bad logins specified entry user has done. 
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.Relay.RelayVariablesManager">
            <summary>
            This class replaces all variables to actual values for 
            undelivered notice and delayed delivery warning messages.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayVariablesManager.#ctor(LumiSoft.MailServer.Relay.Relay_Session,System.String,System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayVariablesManager.Process(System.String)">
            <summary>
            Search variables and replace them with values.
            </summary>
            <param name="text">Text to process.</param>
            <returns>Returns text with variables replaced with real values.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayVariablesManager.ReplaceVariable(System.String)">
            <summary>
            Replaces specified variable with actual value.
            </summary>
            <param name="variable">Variable to replace.</param>
        </member>
        <member name="T:LumiSoft.MailServer.Relay.RelayInfo">
            <summary>
            This class parses relay info from message.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayInfo.#ctor(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="relayMsgStrm">Message stream from to read relay info.</param>
            <param name="undelivered">Specifies minutes when message is considered to be undelivered.</param>
            <param name="undeliveredWarning">Specifies minutes when delayed delivery warning is sent.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayInfo.ReadRelayInfo(System.IO.Stream)">
            <summary>
            Parses relay info from stream.
            </summary>
            <param name="relayMsgStrm"></param>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.To">
            <summary>
            Gets recipient.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.From">
            <summary>
            Gets sender.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.MessageDate">
            <summary>
            Gets message store date.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.IsUndeliveredWarningSent">
            <summary>
            Gets if undelivered warning is sent.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.IsUndeliveredDateExceeded">
            <summary>
            Gets if undelivered date is exceeded.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.MustSendWarning">
            <summary>
            Gets if must send undelivered warning.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.WarningBitPos">
            <summary>
            Gets undelivered bit position in stream.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.MessageStartPos">
            <summary>
            Gets message start position in stream.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.DeviveringForHours">
            <summary>
            Gets how many hours server will try to send message.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayInfo.ForwardHost">
            <summary>
            Gets or sets host where message must be forwarded. This can be host name or IP address.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.ServerReturnMessage">
            <summary>
            This class represents server return message template. 
            For example for undelivered messagege notice, delayed delivery warning, ... .
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.ServerReturnMessage.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="subject">Message subject template.</param>
            <param name="bodyTextRft">Messge body text template in RTF format.</param>
        </member>
        <member name="P:LumiSoft.MailServer.ServerReturnMessage.Subject">
            <summary>
            Gets message subject template.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.ServerReturnMessage.BodyTextRtf">
            <summary>
            Gets body text template in RTF format.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer._MessageRuleAction_NNTP_Async">
            <summary>
            NNTP asynchronous message poster. This class is used by internally by 'Store To NNTP Newsgroup' message rule action.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_NNTP_Async.#ctor(System.String,System.Int32,System.String,System.IO.MemoryStream)">
            <summary>
            Default constructor.
            </summary>
            <param name="server">NNTP server.</param>
            <param name="port">NNTP server port. Default is 119.</param>
            <param name="newsgroup">NNTP newsgroup where to post message.</param>
            <param name="message">Message to post.</param>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_NNTP_Async.Post">
            <summary>
            Posts message.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.MailServerAuthType_enum">
            <summary>
            Specifies mailserver authentication type.
            </summary>
        </member>
        <member name="F:LumiSoft.MailServer.MailServerAuthType_enum.Integrated">
            <summary>
            Mail server integrated authentication. Uses mailserver user name and password.
            </summary>
        </member>
        <member name="F:LumiSoft.MailServer.MailServerAuthType_enum.Windows">
            <summary>
            Windows authentication. Uses mail server user name and windows password to do authentication.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.WinLogon">
            <summary>
            Windows logon provider.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.WinLogon.Logon(System.String,System.String,System.String)">
            <summary>
            Logs user to windows.
            </summary>
            <param name="domain">Windows domain.</param>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns true if logon successful.</returns>
        </member>
        <member name="T:LumiSoft.MailServer.UI.wfrm_Tray">
            <summary>
            Adds tray app support to mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.InitUI">
            <summary>
            Creates and intializes UI.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.Start">
            <summary>
            Starts mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.Stop">
            <summary>
            Stops server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.Exit">
            <summary>
            Exits tray application, stops server.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.Relay.Relay_Session">
            <summary>
            This class implements relay server session.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.#ctor(LumiSoft.MailServer.Relay.Relay_Server,System.String,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="server">Reference to owner relay server.</param>
            <param name="file">Message file to relay.</param>
            <param name="relay_retry">If true then first time relay, otherwise retry attempt.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.Dispose">
            <summary>
            Clean up any resources beeing used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.Start">
            <summary>
            Starts relay session processing.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.End(System.Boolean,System.Exception)">
            <summary>
            Ends RelaySession, does clean up.
            </summary>
            <param name="sendOk">Specifies if message sent ok.</param>
            <param name="exception">If sendOk=false, then exception is filled with error info.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.Kill(System.String)">
            <summary>
            Kills this session.
            </summary>
            <param name="text">Text to reply to connected server.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.ConnectCompleted(LumiSoft.Net.SocketCallBackResult,System.Exception)">
            <summary>
            Is called when Connect completed.
            </summary>
            <param name="result"></param>
            <param name="exception"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.EhloCompleted(LumiSoft.Net.SocketCallBackResult,System.Exception)">
            <summary>
            Is called when EHLO is completed.
            </summary>
            <param name="result"></param>
            <param name="exception"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.AuthenticationCompleted(LumiSoft.Net.SocketCallBackResult,System.Exception)">
            <summary>
            Is called when authentication is completed.
            </summary>
            <param name="result"></param>
            <param name="exception"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.SetSenderCompleted(LumiSoft.Net.SocketCallBackResult,System.Exception)">
            <summary>
            Is called SetSender completed.
            </summary>
            <param name="result"></param>
            <param name="exception"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.SetRecipientCompleted(LumiSoft.Net.SocketCallBackResult,System.Exception)">
            <summary>
            Is called when SetRecipient completed.
            </summary>
            <param name="result"></param>
            <param name="exception"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.MessageSendingCompleted(LumiSoft.Net.SocketCallBackResult,System.Exception)">
            <summary>
            Is called when MessageSending completed.
            </summary>
            <param name="result"></param>
            <param name="exception"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.MakeUndeliveredNotify(LumiSoft.MailServer.Relay.RelayInfo,System.String,System.IO.Stream)">
            <summary>
            Creates undelivered notify for user and places it to relay folder.
            </summary>
            <param name="relayInfo">Relay info</param>
            <param name="error">SMTP returned error text.</param>
            <param name="file">Messsage file.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.MakeUndeliveredWarning(LumiSoft.MailServer.Relay.RelayInfo,System.String,System.IO.Stream)">
            <summary>
            Creates undelivered warning for user and places it to relay folder.
            </summary>
            <param name="relayInfo">Relay info</param>
            <param name="error">SMTP returned error text.</param>
            <param name="file">Messsage file.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Session.GetConnectionPoint">
            <summary>
            Gets next connection point form available connection points queue. Returns null if none is available.
            Also connection points what maximum allowed connections exceeded, will be skiped.
            </summary>
            <returns>Returns connection point or null if none available.</returns>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.SessionID">
            <summary>
            Gets relay session ID.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.SessionStartTime">
            <summary>
            Gets session start time.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.LocalEndPoint">
            <summary>
            Gets session local endpoint.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.RemoteEndPoint">
            <summary>
            Gets session remote endpoint.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.LastActivity">
            <summary>
            Gets time when was session last activity.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.ExpectedTimeout">
            <summary>
            Gets how many seconds has left before timout is triggered.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.SessionActiveLog">
            <summary>
            Gets log entries that are currently in log buffer.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.ReadedCount">
            <summary>
            Gets how many bytes are readed through this session.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.WrittenCount">
            <summary>
            Gets how many bytes are written through this session.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.IsSecureConnection">
            <summary>
            Gets if the connection is an SSL connection.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.FileName">
            <summary>
            Gets file name which is relayed by this session.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.To">
            <summary>
            Gets relay destination recipient email address.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.From">
            <summary>
            Gets orginal sender email address who sent this relay message.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.ConnectedHostName">
            <summary>
            Gets connected host name. If no connected host or name getting failed, returns "".
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.MessageID">
            <summary>
            Gets relay message ID.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Session.OwnerServer">
            <summary>
            Gets relay session owner relay server.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.MainX">
            <summary>
            Application main class.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.MainX.Main(System.String[])">
            <summary>
            Application main entry point.
            </summary>
            <param name="args">Command line argumnets.</param>
        </member>
        <member name="M:LumiSoft.MailServer.MainX.CurrentDomain_UnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            This is called when unhandled exception happened.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LumiSoft.MailServer.MainX.Application_ThreadException(System.Object,System.Threading.ThreadExceptionEventArgs)">
            <summary>
            This method is called when unhandled excpetion happened.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LumiSoft.MailServer.XmlTable">
            <summary>
            Represents simple xml serializable/deserializable name/value table.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.Add(System.String,System.String)">
            <summary>
            Adds name/value to table.
            </summary>
            <param name="name">Name of the value pair.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.GetValue(System.String)">
            <summary>
            Gets value from name/value table.
            </summary>
            <param name="name">Name of value to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.Parse(System.Byte[])">
            <summary>
            Parses table from byte[] xml data.
            </summary>
            <param name="data">Table data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.ToStringData">
            <summary>
            Returns string representation of xml table.
            </summary>
            <returns>Returns string representation of xml table.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.ToByteData">
            <summary>
            Returns byte[] representation of xml table.
            </summary>
            <returns>Returns byte[] representation of xml table.</returns>
        </member>
        <member name="P:LumiSoft.MailServer.XmlTable.TableName">
            <summary>
            Gets or sets table name.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.Monitoring.MonitoringServer">
            <summary>
            LumiSoft mailserver monitoring server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServer.#ctor(LumiSoft.MailServer.Server)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServer.InitNewSession(System.Net.Sockets.Socket,LumiSoft.Net.BindInfo)">
            <summary>
            Initialize and start new session here. Session isn't added to session list automatically, 
            session must add itself to server session list by calling AddSession().
            </summary>
            <param name="socket">Connected client socket.</param>
            <param name="bindInfo">BindInfo what accepted socket.</param>
        </member>
        <member name="P:LumiSoft.MailServer.Monitoring.MonitoringServer.MailServer">
            <summary>
            Gets reference to MailServer.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.SCore">
            <summary>
            Server utility functions.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.IsMatch(System.String,System.String)">
            <summary>
            Checks if text matches to search pattern.
            </summary>
            <param name="pattern"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.IsAstericMatch(System.String,System.String)">
            <summary>
            Checks if text matches to search pattern.
            </summary>
            <param name="pattern"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.PathFix(System.String)">
            <summary>
            Fixes path separator, replaces / \ with platform separator char.
            </summary>
            <param name="path">Path to fix.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.StreamCopy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies all data from source stream to destination stream.
            Copy starts from source stream current position and will be copied to the end of source stream.
            </summary>
            <param name="source">Source stream.</param>
            <param name="destination">Destination stream.</param>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.RtfToText(System.String)">
            <summary>
            Converts RTF text to plain text.
            </summary>
            <param name="rtfText">RTF text to convert.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.RtfToHtml(System.String)">
            <summary>
            Converts RTF text to HTML.
            </summary>
            <param name="rtfText">RTF text to convert.</param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.GlobalMessageRuleActionResult">
            <summary>
            Implements GlobalMessageRuleProcessor.DoActions method result data.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleActionResult.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="deleteMessage">Specifies if message must be deleted.</param>
            <param name="storeFolder">Specifies message folder where message must be stored. Pass null if not specified.</param>
            <param name="errorText">Gets SMTP error text what to report to connected client. Pass null if not specified.</param>
        </member>
        <member name="P:LumiSoft.MailServer.GlobalMessageRuleActionResult.DeleteMessage">
            <summary>
            Gets if message must be deleted.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.GlobalMessageRuleActionResult.StoreFolder">
            <summary>
            Gets to what message folder to store message. Returns null if not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.GlobalMessageRuleActionResult.ErrorText">
            <summary>
            Gets SMTP error text what to report to connected client. Returns null if not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.UI.wfrm_Install">
            <summary>
            LumiSoft mail server installer.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Install.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Install.InitUI">
            <summary>
            Creates and intializes UI.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Install.IsServiceInstalled">
            <summary>
            Gets if mail server service is installed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.Resources.ResManager">
            <summary>
            Resource manager.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Resources.ResManager.GetIcon(System.String)">
            <summary>
            Gets specified icon.
            </summary>
            <param name="iconName">Icon name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.Resources.ResManager.GetImage(System.String)">
            <summary>
            Gets specified image.
            </summary>
            <param name="imageName">Image name.</param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.Server">
            <summary>
            This class represent mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.Start">
            <summary>
            Starts mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.Stop">
            <summary>
            Stops mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.LoadApi(System.String,System.String,System.String)">
            <summary>
            Loads specified virtual server API.
            </summary>
            <param name="assembly">API assembly name.</param>
            <param name="type">API type name.</param>
            <param name="initString">API init string</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.Server.LoadVirtualServers">
            <summary>
            Loads virtual server from xml file.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.StartupPath">
            <summary>
            Gets path where mail server started.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.Running">
            <summary>
            Gets if mail server is running.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.StartTime">
            <summary>
            Gets when server started. Returns DateTime.MinValue if server not running.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.VirtualServers">
            <summary>
            Gets mail server running virtual servers. This property is available only if this.Running = true.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.Sessions">
            <summary>
            Gets all mail server current sessions.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.VirtualServer">
            <summary>
            Implements mail server virtual server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.#ctor(LumiSoft.MailServer.Server,System.String,System.String,System.String,LumiSoft.MailServer.IMailServerApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="server">Server what owns this virtual server.</param>
            <param name="id">Virtual server ID.</param>
            <param name="name">Virtual server name.</param>
            <param name="apiInitString">Virtual server api initi string.</param>
            <param name="api">Virtual server API.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.SMTP_Server_GetMessageStoreStream(System.Object,LumiSoft.Net.SMTP.Server.GetMessageStoreStream_eArgs)">
            <summary>
            Is called by SMTP server if server needs to get stream where to store incoming message.
            </summary>
            <param name="sender"></param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.SMTP_Server_MessageStoringCompleted(System.Object,LumiSoft.Net.SMTP.Server.MessageStoringCompleted_eArgs)">
            <summary>
            Is called by SMTP server if server has completed incoming message storing.
            </summary>
            <param name="sender"></param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.ProcessAndStoreMessage(System.String,System.String[],System.IO.Stream,LumiSoft.Net.SMTP.Server.MessageStoringCompleted_eArgs)">
            <summary>
            Processes and stores message.
            </summary>
            <param name="sender">Mail from.</param>
            <param name="recipient">Recipient to.</param>
            <param name="msgStream">Message stream. Stream position must be there where message begins.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.ProcessRecipientMsg(System.String,System.String,System.String,System.IO.Stream,LumiSoft.Net.SMTP.Server.MessageStoringCompleted_eArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="recipient"></param>
            <param name="storeFolder">Message folder where message will be stored. For example 'Inbox'.</param>
            <param name="msgStream"></param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.ProcessUserMsg(System.String,System.String,System.String,System.String,System.IO.Stream,LumiSoft.Net.SMTP.Server.MessageStoringCompleted_eArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="recipient"></param>
            <param name="userName"></param>
            <param name="storeFolder">Message folder where message will be stored. For example 'Inbox'.</param>
            <param name="msgStream"></param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.IMAP_Server_ValidateIPAddress(System.Object,LumiSoft.Net.ValidateIP_EventArgs)">
            <summary>
            Is called by IMAP server if connected client IP address must be validated.
            </summary>
            <param name="sender"></param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.IMAP_Server_AuthUser(System.Object,LumiSoft.Net.IMAP.Server.AuthUser_EventArgs)">
            <summary>
            Is called by IMAP server if connected client authentication data must be validated.
            </summary>
            <param name="sender"></param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.Start">
            <summary>
            Starts this virtual server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.Stop">
            <summary>
            Stops this virtual server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.IsRelayAllowed(System.String,System.Net.IPAddress)">
            <summary>
            Checks if relay is allowed to specified User/IP.
            First user 'Allow Relay' checked, if not allowed, then checked if relay denied for that IP,
            at last checks if relay is allowed for that IP.
            </summary>
            <param name="userName"></param>
            <param name="ip"></param>
            <returns>Returns true if relay is allowed.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.IsAccessAllowed(LumiSoft.MailServer.Service_enum,System.Net.IPAddress)">
            <summary>
            Checks if specified service access is allowed for specified IP.
            </summary>
            <param name="service">SMTP or POP3 or IMAP.</param>
            <param name="ip"></param>
            <returns>Returns true if allowed.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.OnError(System.Exception)">
            <summary>
            Is called when error happens.
            </summary>
            <param name="x"></param>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.ID">
            <summary>
            Gets virtual server ID.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.Enabled">
            <summary>
            Starts or stops server.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.Name">
            <summary>
            Gets virtual server name
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.API">
            <summary>
            Gets this virtual server API.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.MailStorePath">
            <summary>
            Gets mailstore path.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.SmtpServer">
            <summary>
            Gets this virtual server SMTP server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.Pop3Server">
            <summary>
            Gets this virtual server POP3 server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.ImapServer">
            <summary>
            Gets this virtual server IMAP server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.RelayServer">
            <summary>
            Gets this virtual server Relay server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.SipServer">
            <summary>
            Gets this virtual server SIP server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.TextDb">
            <summary>
            Text database(CSV,TAB,SP delimited text database).
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.#ctor(System.Char)">
            <summary>
            Default constructor.
            </summary>
            <param name="fieldDelimiter">Field value delimiter. Comma,Tab,Space, ... . Restricted chars are: '"' '!' '#'.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.Open(System.String)">
            <summary>
            Opens specified text database.
            </summary>
            <param name="file">Text database file name with optional path.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.OpenOrCreate(System.String)">
            <summary>
            Opens or creates specified text database.
            </summary>
            <param name="file">Text database file name with optional path.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.OpenRead(System.String)">
            <summary>
            Opens specified text database.
            </summary>
            <param name="file">Text database file name with optional path.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.Close">
            <summary>
            Closes active text database file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.MoveNext">
            <summary>
            Moves current row to next row. Returns true if there is next row and current row moved.
            </summary>
            <returns>Returns true if there is next row and current row moved.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.Append(System.String[])">
            <summary>
            Appends new record to the end of database file. 
            </summary>
            <param name="values">Row values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.AppendComment(System.String)">
            <summary>
            Appends new comment text to the end of database file. 
            </summary>
            <param name="text">Comment text.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.OpenOrCreateDb(System.String)">
            <summary>
            Opens or creates db file.
            </summary>
            <param name="file">Database file name.</param>
        </member>
        <member name="P:LumiSoft.MailServer.TextDb.IsOpen">
            <summary>
            Gets if there is active database.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.TextDb.CurrentRowString">
            <summary>
            Gets current row string line. Returns null if no current record.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.TextDb.CurrentRow">
            <summary>
            Gets current row values. Returns null if no current record.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.Relay.Relay_Server">
            <summary>
            This class implements mail server relay server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.#ctor(LumiSoft.MailServer.VirtualServer)">
            <summary>
            Default constructor.
            </summary>
            <param name="virtualServer">Virtual server that owns this relay server.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.Start">
            <summary>
            Starts relay server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.Stop">
            <summary>
            Stops relay server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.StoreRelayMessage(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Stores relay message.
            </summary>
            <param name="message">Message to store.</param>
            <param name="destinationHost">Destination host or IP where to send message. This value can be null, then DNS MX o A record is used to deliver message.</param>
            <param name="sender">Sender to report to destination server.</param>
            <param name="to">Destination server recipient.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.GetRelayConnections(System.Net.IPAddress)">
            <summary>
            Gets how many relay connections there are for specified IP address.
            </summary>
            <param name="ip">IP address.</param>
            <returns>Returns connection count.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.QueueFeeder">
            <summary>
            This loop processes new Relay,Retry messages and queues them up for delivery.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.ProcessQueue">
            <summary>
            This loop sends queued messages.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.AddSession(LumiSoft.MailServer.Relay.Relay_Session)">
            <summary>
            Adds specified session to sessions collection.
            </summary>
            <param name="session">Session to add.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.RemoveSession(LumiSoft.MailServer.Relay.Relay_Session)">
            <summary>
            Removes specified session from sessions collection.
            </summary>
            <param name="session">Session to remove.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.CheckTimedoutSessions">
            <summary>
            Checks and kills all timedout sessions.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.Relay_Server.FileRelayedNow(System.String)">
            <summary>
            Gets if specified file is being relayed currently.
            </summary>
            <param name="file">File to check.</param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.VirtualServer">
            <summary>
            Gets this relay server owner virtual server.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.Sessions">
            <summary>
            Gets active relay sessions. Note: This property is available only if Relay server is running !
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.Running">
            <summary>
            Gets if server is running.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.HostName">
            <summary>
            Gets or sets host name what is reported to connected SMTP servers.
            If "" then this local computer name is reported.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.SessionIdleTimeout">
            <summary>
            Gets or sets how many seconds session may idle before it is closed automatically.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.MaximumConnections">
            <summary>
            Gets or sets how many conncurent relay session allowed.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.MaximumConnectionsPerIP">
            <summary>
            Gets or sets how many conncurent relay session allowed to one destination IP(host). 
            Value 0 means unlimited.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.UseSmartHost">
            <summary>
            Gets or sets if relay server uses smart host to send out messages.
            If false, then DNS is used to send messages out directly.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.SmartHost">
            <summary>
            Gets or sets smart host name or IP to where send messages.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.SmartHostPort">
            <summary>
            Gets or sets smart host port.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.SmartHostUseSSL">
            <summary>
            Gets or sets if SSL is used to connect to smart host.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.SmartHostUserName">
            <summary>
            Gets or sets smart host user name. Leave empty if no authentication required.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.SmartHostPassword">
            <summary>
            Gets or sets smart host password. Leave empty if no password or authentication required.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.Dns1">
            <summary>
            Gets or sets primary DNS server.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.Dns2">
            <summary>
            Gets or sets secondary DNS server.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.RelayInterval">
            <summary>
            Gets or sets relay interval seconds.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.RelayRetryInterval">
            <summary>
            Gets or sets relay retry interval seconds.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.UndeliveredWarningAfter">
            <summary>
            Gets or sets after how many minutes delayed delivery warning is sent.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.UndeliveredAfter">
            <summary>
            Gets or sets after how many minutes message is considered undelivered. 
            Undelivered notification is sent to sender.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.UndeliveredWarningMessage">
            <summary>
            Gets or sets message template what is sent when message delayed delivery, immediate delivery failed.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.UndeliveredMessage">
            <summary>
            Gets or sets message template what is sent when message delivery has failed.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.SendingIP">
            <summary>
            Gets or sets IP address what is used to send out messages or null if not specified. 
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.LogCommands">
            <summary>
            Gets or sets if relay command are logged.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.LogsPath">
            <summary>
            Gets or sets path where to log relay commands.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.Relay_Server.StoreUndeliveredMessages">
            <summary>
            Gets or sets if undelivered messages are stored.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.ConvertEx">
            <summary>
            Convert methods.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.ConvertEx.ToString(System.Object)">
            <summary>
            Converts object to string. If value == null, returns "".
            </summary>
            <param name="value">Value to  be converted.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.ConvertEx.ToBoolean(System.Object)">
            <summary>
            Convert object to bool. If value == null or object can't be converted to bool, returns false.
            </summary>
            <param name="value">Value to  be converted.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.ConvertEx.ToBoolean(System.Object,System.Boolean)">
            <summary>
            Convert object to bool. If value == null or object can't be converted to bool, returns false.
            </summary>
            <param name="value">Value to  be converted.</param>
            <param name="defaultValue">If parsing fails, this default value is used then.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.ConvertEx.ToInt32(System.Object)">
            <summary>
            Convert object to int. If value == null or object can't be converted to int, returns 0.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.UI.wfrm_WinForm">
            <summary>
            Run as -winform window.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_WinForm.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_WinForm.InitUI">
            <summary>
            Creates and initializes window UI.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer._MessageRuleAction_HTTP_Async">
            <summary>
            HTTP asynchronous message poster. This class is used by internally by 'Store To HTTP' message rule action.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_HTTP_Async.#ctor(System.String,System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="url">Url where to post message. Exmaple: http://domain.com/upload.aspx .</param>
            <param name="message">Message to post. Stream position must be where message begins.</param>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_HTTP_Async.Post">
            <summary>
            Posts message to web page via HTTP.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.GlobalMessageRuleProcessor">
            <summary>
            Global messages rule engine.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.CheckMatchExpressionSyntax(System.String)">
            <summary>
            Checks match expression syntax. Throws exception if syntax isn't valid.
            </summary>
            <param name="matchExpression">Match expression string.</param>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.Match(System.String,System.String,System.String[],LumiSoft.Net.SMTP.Server.SMTP_Session,LumiSoft.Net.Mime.Mime,System.Int32)">
            <summary>
            Checks if specified message matches to specified criteria.
            </summary>
            <param name="matchExpression">Match expression.</param>
            <param name="mailFrom">SMTP MAIL FROM: command email value.</param>
            <param name="rcptTo">SMTP RCPT TO: command email values.</param>
            <param name="smtpSession">SMTP current session.</param>
            <param name="mime">Message to match.</param>
            <param name="messageSize">Message size in bytes.</param>
            <returns>Returns true if message matches to specified criteria.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.Match(System.Boolean,LumiSoft.Net.StringReader,System.String,System.String[],LumiSoft.Net.SMTP.Server.SMTP_Session,LumiSoft.Net.Mime.Mime,System.Int32)">
            <summary>
            Checks if specified message matches to specified criteria.
            </summary>
            <param name="syntaxCheckOnly">Specifies if syntax check is only done. If true no matching is done.</param>
            <param name="r">Match expression reader what contains match expression.</param>
            <param name="mailFrom">SMTP MAIL FROM: command email value.</param>
            <param name="rcptTo">SMTP RCPT TO: command email values.</param>
            <param name="smtpSession">SMTP current session.</param>
            <param name="mime">Message to match.</param>
            <param name="messageSize">Message size in bytes.</param>
            <returns>Returns true if message matches to specified criteria.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.DoActions(System.Data.DataView,LumiSoft.MailServer.VirtualServer,System.IO.Stream,System.String,System.String[])">
            <summary>
            Executes specified actions.
            </summary>
            <param name="dvActions">Dataview what contains actions to be executed.</param>
            <param name="server">Reference to owner virtual server.</param>
            <param name="message">Recieved message.</param>
            <param name="sender">MAIL FROM: command value.</param>
            <param name="to">RCPT TO: commands values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.ClauseItemsToString(LumiSoft.MailServer.GlobalMessageRuleProcessor.PossibleClauseItem)">
            <summary>
            Converts PossibleClauseItem flags to human readable string.
            </summary>
            <param name="clauseItems">Cause item falgs to convert.</param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer._MessageRuleAction_FTP_AsyncSend">
            <summary>
            FTP asynchronous file uploader. This class is used by internally by 'Store To FTP Folder' message rule action.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_FTP_AsyncSend.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.IO.Stream,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="server">FTP server.</param>
            <param name="port">FTP server port.</param>
            <param name="user">User name.</param>
            <param name="password">Password.</param>
            <param name="folder">FTP folder.</param>
            <param name="data">Data to store to server.</param>
            <param name="fileName">File name to add to stored data.</param>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_FTP_AsyncSend.Send">
            <summary>
            Sends message.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.FetchPop3">
            <summary>
            Downloads messages from remote pop3 server to local server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.FetchPop3.#ctor(LumiSoft.MailServer.VirtualServer,LumiSoft.MailServer.IMailServerApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="server"></param>
            <param name="api"></param>
        </member>
        <member name="M:LumiSoft.MailServer.FetchPop3.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.FetchPop3.clnt_SessionLog(System.Object,LumiSoft.Net.Log_EventArgs)">
            <summary>
            Is called when pop3 session log is availabe and must be stored.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LumiSoft.MailServer.FetchPop3.StartFetching">
            <summary>
            Starts messages fetching.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.Enabled">
            <summary>
            Gets or sets if fetch remote messages service is enabled.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.IsFetching">
            <summary>
            Gets if fetching in progress.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.FetchTime">
            <summary>
            Gets if time to fetch.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.LogPath">
            <summary>
            Gets or sets log path.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.LogCommands">
            <summary>
            Gets or sets if to log fetch pop3 commands.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.FetchInterval">
            <summary>
            Gets or sets fetch interval(in seconds).
            </summary>
        </member>
    </members>
</doc>
