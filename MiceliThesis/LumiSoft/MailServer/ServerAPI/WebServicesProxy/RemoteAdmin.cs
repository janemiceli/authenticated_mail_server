//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="RemoteAdminSoap", Namespace="http://tempuri.org/")]
internal class RemoteAdmin : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public RemoteAdmin() {
        this.Url = "http://localhost/RemoteAdmin/RemoteAdmin.asmx";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDomainList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetDomainList() {
        object[] results = this.Invoke("GetDomainList", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDomainList(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDomainList", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetDomainList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet AddDomain(string domainName, string Description) {
        object[] results = this.Invoke("AddDomain", new object[] {
                    domainName,
                    Description});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddDomain(string domainName, string Description, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddDomain", new object[] {
                    domainName,
                    Description}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndAddDomain(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteDomain(string domainID) {
        this.Invoke("DeleteDomain", new object[] {
                    domainID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteDomain(string domainID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteDomain", new object[] {
                    domainID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteDomain(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DomainExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool DomainExists(string source) {
        object[] results = this.Invoke("DomainExists", new object[] {
                    source});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDomainExists(string source, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DomainExists", new object[] {
                    source}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndDomainExists(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetUserList(string domainID) {
        object[] results = this.Invoke("GetUserList", new object[] {
                    domainID});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUserList(string domainID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUserList", new object[] {
                    domainID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetUserList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet AddUser(string fullName, string userName, string password, string Description, string emails, string domainID, int mailboxSize, bool enabled, bool allowRelay, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] remPop3Accounts) {
        object[] results = this.Invoke("AddUser", new object[] {
                    fullName,
                    userName,
                    password,
                    Description,
                    emails,
                    domainID,
                    mailboxSize,
                    enabled,
                    allowRelay,
                    remPop3Accounts});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddUser(string fullName, string userName, string password, string Description, string emails, string domainID, int mailboxSize, bool enabled, bool allowRelay, System.Byte[] remPop3Accounts, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddUser", new object[] {
                    fullName,
                    userName,
                    password,
                    Description,
                    emails,
                    domainID,
                    mailboxSize,
                    enabled,
                    allowRelay,
                    remPop3Accounts}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndAddUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteUser(string userID) {
        this.Invoke("DeleteUser", new object[] {
                    userID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteUser(string userID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteUser", new object[] {
                    userID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteUser(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateUser(string userID, string fullName, string password, string Description, string emails, string domainID, int mailboxSize, bool enabled, bool allowRelay, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] remPop3Accounts) {
        this.Invoke("UpdateUser", new object[] {
                    userID,
                    fullName,
                    password,
                    Description,
                    emails,
                    domainID,
                    mailboxSize,
                    enabled,
                    allowRelay,
                    remPop3Accounts});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateUser(string userID, string fullName, string password, string Description, string emails, string domainID, int mailboxSize, bool enabled, bool allowRelay, System.Byte[] remPop3Accounts, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateUser", new object[] {
                    userID,
                    fullName,
                    password,
                    Description,
                    emails,
                    domainID,
                    mailboxSize,
                    enabled,
                    allowRelay,
                    remPop3Accounts}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateUser(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MailboxExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool MailboxExists(string userName) {
        object[] results = this.Invoke("MailboxExists", new object[] {
                    userName});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginMailboxExists(string userName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("MailboxExists", new object[] {
                    userName}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndMailboxExists(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmailAddressExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool EmailAddressExists(string emailAddress) {
        object[] results = this.Invoke("EmailAddressExists", new object[] {
                    emailAddress});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginEmailAddressExists(string emailAddress, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("EmailAddressExists", new object[] {
                    emailAddress}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndEmailAddressExists(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAliasesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetAliasesList(string DomainName) {
        object[] results = this.Invoke("GetAliasesList", new object[] {
                    DomainName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAliasesList(string DomainName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAliasesList", new object[] {
                    DomainName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetAliasesList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAlias", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet AddAlias(string aliasName, string Description, string AliasMembers, string domainID, bool isPublic) {
        object[] results = this.Invoke("AddAlias", new object[] {
                    aliasName,
                    Description,
                    AliasMembers,
                    domainID,
                    isPublic});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddAlias(string aliasName, string Description, string AliasMembers, string domainID, bool isPublic, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddAlias", new object[] {
                    aliasName,
                    Description,
                    AliasMembers,
                    domainID,
                    isPublic}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndAddAlias(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAlias", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteAlias(string aliasID) {
        this.Invoke("DeleteAlias", new object[] {
                    aliasID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAlias(string aliasID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAlias", new object[] {
                    aliasID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAlias(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAlias", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAlias(string aliasID, string aliasName, string Description, string AliasMembers, string domainID, bool isPublic) {
        this.Invoke("UpdateAlias", new object[] {
                    aliasID,
                    aliasName,
                    Description,
                    AliasMembers,
                    domainID,
                    isPublic});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAlias(string aliasID, string aliasName, string Description, string AliasMembers, string domainID, bool isPublic, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAlias", new object[] {
                    aliasID,
                    aliasName,
                    Description,
                    AliasMembers,
                    domainID,
                    isPublic}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAlias(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRouteList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetRouteList() {
        object[] results = this.Invoke("GetRouteList", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetRouteList(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetRouteList", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetRouteList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRoute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet AddRoute(string pattern, string mailbox, string Description, string domainID) {
        object[] results = this.Invoke("AddRoute", new object[] {
                    pattern,
                    mailbox,
                    Description,
                    domainID});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddRoute(string pattern, string mailbox, string Description, string domainID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddRoute", new object[] {
                    pattern,
                    mailbox,
                    Description,
                    domainID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndAddRoute(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRoute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteRoute(string routeID) {
        this.Invoke("DeleteRoute", new object[] {
                    routeID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteRoute(string routeID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteRoute", new object[] {
                    routeID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteRoute(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRoute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateRoute(string routeID, string pattern, string mailbox, string Description, string domainID) {
        this.Invoke("UpdateRoute", new object[] {
                    routeID,
                    pattern,
                    mailbox,
                    Description,
                    domainID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateRoute(string routeID, string pattern, string mailbox, string Description, string domainID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateRoute", new object[] {
                    routeID,
                    pattern,
                    mailbox,
                    Description,
                    domainID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateRoute(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecurityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetSecurityList() {
        object[] results = this.Invoke("GetSecurityList", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSecurityList(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSecurityList", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetSecurityList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddSecurityEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet AddSecurityEntry(string Description, string protocol, string type, string action, string content, long startIP, long endIP) {
        object[] results = this.Invoke("AddSecurityEntry", new object[] {
                    Description,
                    protocol,
                    type,
                    action,
                    content,
                    startIP,
                    endIP});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddSecurityEntry(string Description, string protocol, string type, string action, string content, long startIP, long endIP, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddSecurityEntry", new object[] {
                    Description,
                    protocol,
                    type,
                    action,
                    content,
                    startIP,
                    endIP}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndAddSecurityEntry(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSecurityEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteSecurityEntry(string securityID) {
        this.Invoke("DeleteSecurityEntry", new object[] {
                    securityID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteSecurityEntry(string securityID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteSecurityEntry", new object[] {
                    securityID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteSecurityEntry(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSecurityEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateSecurityEntry(string securityID, string Description, string protocol, string type, string action, string content, long startIP, long endIP) {
        this.Invoke("UpdateSecurityEntry", new object[] {
                    securityID,
                    Description,
                    protocol,
                    type,
                    action,
                    content,
                    startIP,
                    endIP});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateSecurityEntry(string securityID, string Description, string protocol, string type, string action, string content, long startIP, long endIP, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateSecurityEntry", new object[] {
                    securityID,
                    Description,
                    protocol,
                    type,
                    action,
                    content,
                    startIP,
                    endIP}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateSecurityEntry(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilterList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetFilterList() {
        object[] results = this.Invoke("GetFilterList", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetFilterList(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetFilterList", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetFilterList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet AddFilter(string description, string assembly, string className, int cost, bool enabled) {
        object[] results = this.Invoke("AddFilter", new object[] {
                    description,
                    assembly,
                    className,
                    cost,
                    enabled});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddFilter(string description, string assembly, string className, int cost, bool enabled, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddFilter", new object[] {
                    description,
                    assembly,
                    className,
                    cost,
                    enabled}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndAddFilter(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteFilter(string filterID) {
        this.Invoke("DeleteFilter", new object[] {
                    filterID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteFilter(string filterID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteFilter", new object[] {
                    filterID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteFilter(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateFilter(string filterID, string description, string assembly, string className, int cost, bool enabled) {
        this.Invoke("UpdateFilter", new object[] {
                    filterID,
                    description,
                    assembly,
                    className,
                    cost,
                    enabled});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateFilter(string filterID, string description, string assembly, string className, int cost, bool enabled, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateFilter", new object[] {
                    filterID,
                    description,
                    assembly,
                    className,
                    cost,
                    enabled}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateFilter(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateBackUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public System.Byte[] CreateBackUp() {
        object[] results = this.Invoke("CreateBackUp", new object[0]);
        return ((System.Byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateBackUp(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateBackUp", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Byte[] EndCreateBackUp(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Byte[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RestoreBackUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RestoreBackUp([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] data) {
        this.Invoke("RestoreBackUp", new object[] {
                    data});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRestoreBackUp(System.Byte[] data, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RestoreBackUp", new object[] {
                    data}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRestoreBackUp(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetSettings() {
        object[] results = this.Invoke("GetSettings", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSettings(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSettings", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetSettings(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateSettings(System.Data.DataSet dsSettings) {
        this.Invoke("UpdateSettings", new object[] {
                    dsSettings});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateSettings(System.Data.DataSet dsSettings, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateSettings", new object[] {
                    dsSettings}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateSettings(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
}
